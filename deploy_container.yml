---
- hosts: webserver
  gather_facts: no
  remote_user: root
  tasks:
    - name: Check apt-transport-https
      apt: name=apt-transport-https state=present

    - name: Check ca-certificates
      apt: name=ca-certificates state=present

    - name: Check curl
      apt: name=curl state=present

    - name: Check gnupg2
      apt: name=gnupg2 state=present
    
    - name: Check software-properties-common
      apt: name=software-properties-common state=present
      
    - name: Add Docker's official GPG key
      command: apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D

    - name: Add Docker's official repository to apt sources
      lineinfile: dest="/etc/apt/sources.list.d/docker.list" line="deb https://apt.dockerproject.org/repo debian-stretch main" create=yes

    - name: Update apt cache
      apt: update_cache=yes

    - name: Install Docker
      apt: name=docker-engine state=present

    - name: Install pip
      apt: name=python-pip state=present

    - name: Install docker-py package
      pip: name=docker-py

    - name: Install packaging
      pip: name=packaging

    - name: Install msrestazure
      pip: name=msrestazure

    - name: Install ansible[azure]
      pip: name="ansible[azure]"

    - name: Log into our Azure container registry
      docker_login:
        registry: "{{ registry_uri }}"
        username: build2019dcr
        password: "{{ registry_password }}"

    - name: Pull our Container image
      docker_image:
        name: "{{ registry_uri }}/{{ application_name }}"
        tag: v1
        
    - name: Spin up our Container image
      docker_container: 
       name: webapplication1
       image: "{{ registry_uri }}/{{ application_name }}:v1"
       state: started
       restart: yes
       network_mode: host
       exposed_ports:
        - "80:80"